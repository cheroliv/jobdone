plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
//    id("com.apollographql.apollo3") version("3.3.0")
}
//apollo { packageName.set("education.cccp.toodoo.mobile") }
android {
    compileSdk 32

    defaultConfig {
        applicationId "education.cccp.toodoo.mobile"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    /*
        buildFeatures {
        dataBinding = true
        viewBinding true
    }
     */
//    composeOptions {
        //compatible with (compose_version=1.1.0-beta01)
//        kotlinCompilerExtensionVersion "1.5.31"
//    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}
//tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
//    kotlinOptions {
//        jvmTarget = "1.8"
//        freeCompilerArgs += [
//                              "-P",
//                "plugin:androidx.compose.compiler.plugins.kotlin:suppressKotlinVersionCompatibilityCheck=true"
//        ]
//    }
//}
dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"


//    implementation("com.github.cheroliv:playground:0.0.0")
    // apollo graphql
//    implementation("com.apollographql.apollo3:apollo-runtime:3.3.0")
    testImplementation ("org.mockito.kotlin:mockito-kotlin:4.0.0")
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation ("org.mockito.kotlin:mockito-kotlin:4.0.0")
    // Koin
    // Koin main features for Android
    implementation "io.insert-koin:koin-android:$koin_version"
    // Java Compatibility
    implementation "io.insert-koin:koin-android-compat:$koin_version"
    // Jetpack WorkManager
    implementation "io.insert-koin:koin-androidx-workmanager:$koin_version"
    // Navigation Graph
    implementation "io.insert-koin:koin-androidx-navigation:$koin_version"

    // Koin testing tools
    testImplementation("io.insert-koin:koin-test:$koin_version")
    androidTestImplementation("io.insert-koin:koin-test:$koin_version")
    // Needed JUnit version
    testImplementation("io.insert-koin:koin-test-junit4:$koin_version")
    androidTestImplementation("io.insert-koin:koin-test-junit4:$koin_version")
    testImplementation 'com.github.javafaker:javafaker:0.16'
    testImplementation "com.squareup.okhttp3:mockwebserver:3.12.0"
    ///////////////////////////////////////////////////////////////
    // domain
    // coroutines
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version")
    // Koin for Kotlin apps
//    implementation(dependencyNotation = "io.insert-koin:koin-core:${properties["koin_version"]}")
//    testImplementation(dependencyNotation = "org.jetbrains.kotlin:kotlin-test")
//    testImplementation(dependencyNotation = "org.jetbrains.kotlin:kotlin-test-junit")
    // Testing koin for Kotlin
//    testImplementation (dependencyNotation = "io.insert-koin:koin-test:${properties["koin_version"]}")
//    testRuntimeOnly(dependencyNotation = "io.insert-koin:koin-test:${properties["koin_version"]}")
    // Koin for JUnit 4
//    testImplementation (dependencyNotation = "io.insert-koin:koin-test-junit4:${properties["koin_version"]}")
//    testRuntimeOnly(dependencyNotation = "io.insert-koin:koin-test-junit4:${properties["koin_version"]}")


}